version: "3.8"

volumes:
  sc-volume:
  database_mysql:
    
networks:
  sc-network:
    driver: bridge

services:
  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    restart: always
    command:
      ## Log Settings
      - "--log.level=DEBUG"
      ## API Settings (not prod recomended)
      - "--api.insecure=true"
      ## Provider Settings
      - "--providers.file.filename=/dynamic.toml"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      ## Entrypoints Settings
      - "--entrypoints.backend.address=:${TRAEFIK_ENTRY_PORT}"
    ports:
      - "${TRAEFIK_ENTRY_PORT}:${TRAEFIK_ENTRY_PORT}"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./dynamic.toml:/dynamic.toml
    networks:
      - sc-network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "${RABBITMQ_HOST}"
    hostname: "${RABBITMQ_HOST}"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/"
    restart: on-failure
    ports:
      - "${RABBITMQ_DASHBOARD_PORT}:${RABBITMQ_DASHBOARD_PORT}"
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
    networks:
      - sc-network

  mysql-sc:
    image: mysql:5.7
    container_name: "${MYSQL_HOST}"
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_ROOT_HOST=${MYSQL_HOST} 
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_TASKS_DB_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - database_mysql:/var/lib/mysql
    networks:
      - sc-network

  mock-auth-server:
    build:
      context: ./mock-auth-server
      dockerfile: Dockerfile
    container_name: "mock-auth-server"
    depends_on:
      - traefik
    ports:
      - "${AUTH_HTTP_PORT}:${AUTH_HTTP_PORT}"
    environment:
      - HTTP_PORT=:${AUTH_HTTP_PORT}
    restart: on-failure  
    networks:
      - sc-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authserver.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.authserver.entrypoints=backend"

  notifications-agent:
    build:
      context: ./notifications-agent
      dockerfile: Dockerfile
    container_name: "notifications-agent"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=:${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - EXCHANGE=${DEFAULT_EXCHANGE}
      - NOTIFICATIONS_QUEUE_NAME=${NOTIFICATIONS_QUEUE_NAME}
      - TASK_CREATED_BINDING_KEY=${TASK_CREATED_ROUTING_KEY}
    restart: on-failure
    networks:
      - sc-network

  tasks-service:
    build:
      context: ./tasks-service
      dockerfile: Dockerfile
    container_name: tasks-service
    ports:
      - "${TASKS_HTTP_PORT}:${TASKS_HTTP_PORT}"
    environment:
      - DB_DRIVER=${TASKS_DB_DRIVER}
      - DB_HOST=${MYSQL_HOST}
      - DB_PORT=${MYSQL_PORT}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_TASKS_DB_NAME}
      - HTTP_PORT=:${TASKS_HTTP_PORT}
      - AES_ENCRYPTION_KEY=${AES_ENCRYPTION_KEY}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=:${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - EXCHANGE=${DEFAULT_EXCHANGE}
      - TASK_CREATED_ROUTING_KEY=${TASK_CREATED_ROUTING_KEY}
    restart: on-failure
    depends_on:
      - mysql-sc
      - rabbitmq
      - traefik
    networks:
      - sc-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task.rule=PathPrefix(`/task`)"
      - "traefik.http.routers.task.entrypoints=backend"
      - "traefik.http.routers.task.middlewares=fwd-auth@file,task-stripprefix@file"


